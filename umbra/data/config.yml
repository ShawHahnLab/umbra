# Default run-time configuration options.

##############################################################################
# Basics 
# Set an explicit logging level.  This follows the default Python numeric
# logging levels (0 to 50 in increments of 10, with lower numbers yielding more
# verbose output).  If unset it will be left at the run-time default (currently
# 30, "WARNING").  Each command-line argument of "-v" and "-q" will decrement
# and increment this value by 10, also.
loglevel: null
# Should processing be completed and new files written?  If readonly is set to
# true these will be skipped.  Calling with the "report" action will set this
# to true.
readonly: false
# How many worker threads should be run in parallel?  This sets an upper limit
# on how many projects will be processed at a time.
nthreads: 1
# How many threads should each of the above workers use, at maximum, during
# processing?
nthreads_per_project: 1
# Should run directories newer than a certain age be skipped in a given refresh
# cycle?  This can avoid spurious warnings for partially-written run data.
# Configure as a number of seconds from the present time.  This will be
# separately applied to the Alignment directories within each run directory as
# well.
min_age: null
# How about run directories older than a certain age?
max_age: null

##############################################################################
# Configuration for client/server features via HTTP.
# If host is left at 127.0.0.1 it will only be reachable from the local system.
server:
  enabled: true
  host: "127.0.0.1"
  port: 15137

##############################################################################
# Basic file and directory path setup for processing tasks.
paths:
  # This is used as a parent directory for any relative paths given below in
  # this section.
  root: "/seq"
  # These are interpreted as subdirectories of the root path unless they are
  # absolute paths.
  runs: "runs"
  experiments: "experiments"
  status: "status"
  processed: "processed"
  packaged: "packaged"

##############################################################################
# Task configuration options. The Box and Mailer options are handled
# separately; see sections below.
# Paths here are relative to a particular project's processing directory.
task_options:
  # A file or directory path containing custom Task classes to include.  If a
  # directory, all files ending in .py will be searched.  Each file will be
  # searched for classes with names starting with Task.
  custom_tasks_source: ""
  # Subdirectory to use for implicitly-required (not explicitly requested for
  # the project) task output directories.  By default these are stored
  # side-by-side on the top level with the rest of the per-task directories.
  implicit_tasks_path: ""
  # List of task names whose output should always be kept at the top level (if
  # present) whether explicitly or implicitly included.
  always_explicit_tasks: [ ]
  # Subdirectory to use for per-task log files.
  log_path: "logs"
  # These tasks will always be executed
  task_defaults: ["metadata", "email"]
  # These tasks will be executed if no tasks at all are specified
  task_null: ["copy"]
  # These are specific per-task options
  tasks:
    spades:
      # FASTQ quality score encoding offset
      phred_offset: 33
    assemble:
      # Min length of contigs to keep in filtered Geneious-ready form
      contig_length_min: 255
    manual:
      # Timeout in seconds while waiting for the manual processing step.  If
      # this is reached a ProjectError is raised, failing the processing.
      # 60*60*24*7 = 604800 = 1 week
      timeout: 604800
      # Delay between checks in seconds (currently implemented as a dumb loop)
      delta: 5
    geneious:
      # Same timeout and delta behavior as the manual task.
      timeout: 604800
      delta: 5
    email:
      # (This is for the email task specifically. For general email-sending
      # configuration see the "mailer" header below.)
      # These are the subject, plaintext body, and HTML body templates for
      # outgoing notification emails when processing is complete.  (Most people
      # will probably see the HTML one though we provide plaintext just in
      # case).  Use curly braces around templated variables.  The task object
      # is "self" when the template is filled in, so you can use references
      # like:
      #  * self.work_dir_name: "short name" of this dataset, like
      #    "2019-04-26-project-person"
      #  * self.url: file download URL as provided by the upload task.
      template_subject: Illumina Run Processing Complete for {self.work_dir_name}
      template_text: |
        Hello,

        Illumina run processing is complete for {self.work_dir_name}
        and a zip file with results can be downloaded from this url:

        {self.url}

        ========================================

          Run: {self.proj.alignment.run.run_id}
          Experiment: {self.proj.alignment.experiment}
          Processing Status: {self.proj.path}
      template_html: |
        Hello,
        <br><br>

        Illumina run processing is complete for {self.work_dir_name}
        and a zip file with results can be downloaded from this url:
        <br><br>

        <a href='{self.url}'>{self.url}</a>
        <br><br>

        <small style="font-family: monospace; white-space: pre; color: gray;">
          Run: {self.proj.alignment.run.run_id}
          Experiment: {self.proj.alignment.experiment}
          Processing Status: {self.proj.path}
        </small>


##############################################################################
# Options for the report displayed during the "report" action.
report:
  max_width: 60

##############################################################################
# Options for the "process" action.
process:
  # Seconds to wait between refreshing data from disk.
  poll: 5
  # Should processing wait for all queued jobs to be finished processing before
  # continuing to the next cycle each time?
  wait: False

##############################################################################
# Options for the report saved during processing.  Set this to an empty string
# or null to disable.
save_report:
  path: "/var/log/umbra/report.csv"
  # Maximum width in characters of any one column in the report.  0 means
  # unlimited.
  max_width: 0

##############################################################################
# Configuration and authentication details for uploading finished zip files to
# Box.com.
box:
  # If enabled, box uploads are skipped during processing.
  skip: false
  # Set this to an existent YAML file to store credentials separately from the
  # main configuration.  This is required for Box since we need to refresh
  # credentials automatically and update the file.  If this file is not
  # present, skip is set to true.
  credentials_path: "/var/lib/umbra/boxcreds.yml"
  # The Box folder to upload to, by ID nubmer, not name.  The ID can be found
  # at the end of a URL, like "box.com/folder/0".  Folder 0 is the root folder.
  folder_id: 0
  # If strict_auth is enabled, an authentication failure during the initial
  # connection will stop the program.  Otherwise, a URL is logged to help get
  # credentials interactively from Box.
  strict_auth: false

##############################################################################
# Configuration and authentication details for sending alert emails.
mailer:
  # If enabled, email alerts are skipped during processing.
  skip: false
  # Set this to an existent YAML file to store credentials separately from the
  # main configuration. (Any of the below options can be placed in this file
  # instead.)
  credentials_path: "/var/lib/umbra/mailcreds.yml"
  # Authentication details: server, port, enable SSL, and enable
  # authentication.  For sending via a local mail server on the usual port
  # with no authentication requirements these should be fine.
  host: localhost
  port: 25
  ssl: false
  auth: false
  # Username and password (if authentication is enabled)
  user: null
  password: null
  # The "From" field to use in outgoing mail.  If unspecified, the address
  # will be username @ hostname.  Setting the hostname part to something else
  # may look fishy to receiving mail servers.
  from_addr: null
  # Any addressses that should be CC'd on sent emails.  If set, this can be a
  # single address or a list.
  cc_addrs: null
  # An optional address for the "Reply-To" header of sent emails.
  reply_to: null
  # Any addresses that should receive email alerts of processing failures (in
  # addition to cc_addrs).
  to_addrs_on_error: null
